- name: Create docker project directory
  ansible.builtin.file:
    path: "{{ docker_project_root }}"
    state: directory
    mode: '0700'
    owner: "{{docker_user}}"
    group: "{{docker_user}}"
  become: true

# following packages must be installed via package role first
# python3-pip
# virtualenv
- name: Install Docker Module for Python into venv
  pip:
    virtualenv: '{{docker_python_venv}}'
    name:
      - docker 
      - docker-compose

- name: Make sure docker_user in docker group
  user:
    name: '{{docker_user}}'
    groups: docker
    append: yes
  become: true

- name: Create docker project item directories
  ansible.builtin.file:
    path: "{{ docker_project_root }}/{{ item }}"
    state: directory
    mode: '0700'
    owner: "{{docker_user}}"
    group: "{{docker_user}}"
  become: true
  loop: "{{ docker_containers }}"

- name: Copy recreate container
  ansible.builtin.template:
    src: "recreate_container.j2"
    dest: "{{docker_project_root}}/recreate_container"
    owner: "{{docker_user}}"
    group: "{{docker_user}}"
    mode: '700'
  become: true

- name: Copy templated dockerfiles
  ansible.builtin.template:
    src: "{{ item }}.yml.j2"
    dest: "{{ docker_project_root }}/{{ item }}/docker-compose.yml"
    owner: "{{docker_user}}"
    group: "{{docker_user}}"
    mode: '600'
  become: true
  loop: "{{ docker_containers }}"

- name: Start docker containers
  vars:
    ansible_python_interpreter: '{{docker_python_interpreter}}'
  community.docker.docker_compose:
    project_src: "{{ docker_project_root }}/{{ item }}"
    pull: true
  loop: "{{ docker_containers }}"
